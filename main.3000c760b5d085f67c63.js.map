{"version":3,"file":"main.3000c760b5d085f67c63.js","mappings":"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","sources":["webpack://d-element/./src/js/clearForm.js","webpack://d-element/./src/api/fetch_api.js","webpack://d-element/./src/js/formValidate.js","webpack://d-element/./src/js/formController.js","webpack://d-element/./src/js/post_form_data_class.js","webpack://d-element/./src/js/popupWindowController.js","webpack://d-element/./src/js/modalWindowController.js","webpack://d-element/./src/js/modal.js"],"sourcesContent":["export class ClearForm {\r\n\r\n    constructor(form) {\r\n        this.form = form;\r\n        this.formReqFields = form.querySelectorAll(\"[data-req]\");\r\n        this.formErrorIndicator = Array.from(this.formReqFields).map(item => item.previousSibling);\r\n    }\r\n\r\n    clearForm = () => {\r\n        this.formErrorIndicator.forEach(item => item.innerHTML = \"\");\r\n        this.formReqFields.forEach(item => item.classList.remove(\"_error\"));\r\n        this.formErrorIndicator.forEach(item => item.classList.remove(\"_error\"));\r\n    }\r\n}","export const fetch_api = {\r\n    postData(data) {\r\n        return fetch(\"http://localhost:8080\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(data)\r\n        }).then(data => data)\r\n    }\r\n}","export class FormValidate {\r\n\r\n    emailValidate = (value) => {\r\n        return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);\r\n    }\r\n\r\n    notEmptyField = (value) => !!value;\r\n\r\n    formValidate = (form) => {\r\n\r\n        let formReqField = form.querySelectorAll(\"[data-req]\");\r\n\r\n        const formError = {\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\"\r\n        };\r\n\r\n        formReqField.forEach((item) => {\r\n            if (!this.notEmptyField(item.value)) {\r\n                formError[item.name] = `${item.name} is require!`\r\n            }\r\n\r\n            if (item.name === \"email\" && item.value) {\r\n                if (!this.emailValidate(item.value)) {\r\n                    formError.email = \"Not valid email\"\r\n                }\r\n            }\r\n\r\n            if (item.name === \"message\" && item.value.length > 256) {\r\n                if (!item.value.length < 256) {\r\n                    formError.message = \"Message must be short of 256 symbols\"\r\n                }\r\n            }\r\n\r\n        })\r\n        return formError\r\n    }\r\n\r\n}","export class FormController {\r\n\r\n    constructor(form,formValidate) {\r\n        this.form = form;\r\n        this.formValidate = formValidate;\r\n        this.formReqField = form.querySelectorAll(\"[data-req]\")\r\n    }\r\n\r\n    formAddError = (inputName, message) => {\r\n        const selector = `[name=${inputName}]`\r\n        const input = this.form.querySelector(`${selector}`);\r\n        const p = input.previousSibling;\r\n        p.innerText = message;\r\n        p.classList.add(\"_error\");\r\n        input.classList.add(\"_error\");\r\n    }\r\n\r\n    formRemoveError = (inputName) => {\r\n        const selector = `[name=${inputName}]`\r\n        const input = this.form.querySelector(`${selector}`)\r\n        const p = input.previousSibling;\r\n        p.innerText = \"\";\r\n        input.classList.remove(\"_error\");\r\n    }\r\n\r\n    isValidateError = () => {\r\n\r\n        const error = this.formValidate.formValidate(this.form);\r\n\r\n        if (error.name || error.email || error.message) {\r\n\r\n            for (const [key, value] of Object.entries(error)) {\r\n                if (key && value.length) {\r\n                    this.formAddError(key, value);\r\n                } else {\r\n                    this.formRemoveError(key);\r\n                }\r\n            }\r\n\r\n            return true\r\n\r\n        } else {\r\n            return false\r\n        }\r\n\r\n    };\r\n}","export class PostFormData {\r\n\r\n    constructor(form, fetchAPI) {\r\n        this.dataFields = form.querySelectorAll(\"[data-req]\");\r\n        this.fetchAPI = fetchAPI;\r\n        this.formData = {\r\n            name: this.dataFields[0],\r\n            email: this.dataFields[1],\r\n            message: this.dataFields[2]\r\n        }\r\n    };\r\n\r\n    POST = async () => {\r\n        try {\r\n            this.dataFields.forEach(item => item.setAttribute(\"disable\", \"true\"));\r\n            const response = await this.fetchAPI.postData(this.formData);\r\n            return \"ok\";\r\n        } catch (error) {\r\n            console.error(error)\r\n            return  error;\r\n        } finally {\r\n            this.dataFields.forEach(item => item.removeAttribute(\"disable\"));\r\n        }\r\n    };\r\n}","export class PopupWindowController {\r\n    constructor(popUpWindow) {\r\n        this.popUpWindow = popUpWindow\r\n    }\r\n\r\n    popupOpen = () => {\r\n        this.popUpWindow.classList.add(\"popUp-open\");\r\n    }\r\n\r\n    popupWindowCloseTimeout = () => {\r\n        setTimeout(() => {\r\n            this.popUpWindow.classList.remove(\"popUp-open\");\r\n        }, 3000)\r\n    }\r\n}","export class ModalWindowController {\r\n\r\n    constructor(body, overlayWindow, modalWindow, clearForm) {\r\n        this.body = body;\r\n        this.clearForm = clearForm;\r\n        this.modalWindow = modalWindow;\r\n        this.overlayWindow = overlayWindow;\r\n    }\r\n\r\n    modalOpen = () => {\r\n        this.body.classList.add(\"body_scroll-off\");\r\n        this.overlayWindow.classList.add(\"overlay-open\");\r\n        this.modalWindow.classList.add(\"lets_talk_modal-open\");\r\n        this.overlayWindow.addEventListener(\"click\", this.allClose);\r\n        this.modalWindow.addEventListener(\"click\", (e) => e.stopPropagation());\r\n    }\r\n\r\n    allClose = () => {\r\n        this.clearForm.clearForm();\r\n        this.body.classList.remove(\"body_scroll-off\");\r\n        this.overlayWindow.classList.remove(\"overlay-open\");\r\n        this.overlayWindow.removeEventListener(\"click\", this.allClose);\r\n        this.modalWindow.classList.remove(\"lets_talk_modal-open\");\r\n        this.modalWindow.removeEventListener(\"click\", (e) => e.stopPropagation());\r\n    }\r\n\r\n}","import {ClearForm} from \"./clearForm\";\r\nimport {fetch_api} from \"../api/fetch_api\";\r\nimport {FormValidate} from \"./formValidate\";\r\nimport {FormController} from \"./formController\";\r\nimport {PostFormData} from \"./post_form_data_class\";\r\nimport {PopupWindowController} from \"./popupWindowController\";\r\nimport {ModalWindowController} from \"./modalWindowController\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n    const body = document.querySelector(\"body\");\r\n    const form = document.querySelector(\".form\");\r\n    const popUpWindow = document.querySelector(\".popUp\");\r\n    const overlayWindow = document.querySelector(\".overlay\");\r\n    const modalWindow = document.querySelector(\".lets_talk_modal\");\r\n    const letsTalkButton = document.querySelector(\".lets_talk_block__button\");\r\n    const modalWindowCloseButton = document.querySelector(\".lets_talk_modal__close_button\");\r\n\r\n    const clearForm = new ClearForm(form);\r\n    const formExternalValidate = new FormValidate();\r\n    const postFormData = new PostFormData(form, fetch_api);\r\n    const popupWindowController = new PopupWindowController(popUpWindow);\r\n    const formController = new FormController(form, formExternalValidate);\r\n    const modalWindowController = new ModalWindowController(body, overlayWindow, modalWindow, clearForm);\r\n\r\n    letsTalkButton.addEventListener(\"click\", modalWindowController.modalOpen);\r\n\r\n    modalWindowCloseButton.addEventListener(\"click\", modalWindowController.allClose);\r\n\r\n    form.addEventListener(\"submit\", async (event) => {\r\n            event.preventDefault();\r\n\r\n            const isError = formController.isValidateError(form);\r\n            if (!isError) {\r\n                const status = await postFormData.POST();\r\n                if (status/* === \"ok\"*/) {\r\n                    form.reset();\r\n                    clearForm.clearForm();\r\n                    modalWindowController.allClose();\r\n                    popupWindowController.popupOpen();\r\n                    popupWindowController.popupWindowCloseTimeout();\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n});\r\n"],"names":["ClearForm","form","formErrorIndicator","forEach","item","innerHTML","formReqFields","classList","remove","this","querySelectorAll","Array","from","map","previousSibling","fetch_api","postData","data","fetch","method","body","JSON","stringify","then","FormValidate","value","test","formReqField","formError","name","email","message","notEmptyField","emailValidate","length","FormController","formValidate","inputName","selector","input","querySelector","p","innerText","add","error","Object","entries","key","formAddError","formRemoveError","PostFormData","fetchAPI","dataFields","setAttribute","formData","console","removeAttribute","PopupWindowController","popUpWindow","setTimeout","ModalWindowController","overlayWindow","modalWindow","clearForm","addEventListener","allClose","e","stopPropagation","removeEventListener","i","document","letsTalkButton","modalWindowCloseButton","formExternalValidate","postFormData","popupWindowController","formController","modalWindowController","modalOpen","event","preventDefault","isValidateError","POST","reset","popupOpen","popupWindowCloseTimeout"],"sourceRoot":""}