{"version":3,"file":"main.60d2b32481f2e3479ca3.js","mappings":"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","sources":["webpack://d-element/./src/api/fetch_api.js","webpack://d-element/./src/js/formValidate.js","webpack://d-element/./src/js/post_form_data_class.js","webpack://d-element/./src/js/popupWindowController.js","webpack://d-element/./src/js/modalWindowController.js","webpack://d-element/./src/js/modal.js"],"sourcesContent":["export const fetch_api = {\r\n    postData(url, data) {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(data)\r\n        }).then(data => data)\r\n    }\r\n}","export class FormValidate {\r\n    constructor(form, popUpWindow, modalWindow, modalWindowController, popupWindowController, postFormData) {\r\n        this.form = form;\r\n        this.popUpWindow = popUpWindow\r\n        this.modalWindow = modalWindow\r\n        this.postFormData = postFormData\r\n        this.modalWindowController = modalWindowController\r\n        this.popupWindowController = popupWindowController\r\n    }\r\n\r\n    formAddError = (input, message) => {\r\n        const p = input.previousSibling\r\n        p.innerText = message\r\n        p.classList.add(\"_error\")\r\n        input.classList.add(\"_error\")\r\n    }\r\n\r\n    formRemoveError = (input) => {\r\n        const p = input.previousSibling\r\n        p.classList.remove(\"_error\")\r\n        p.innerText = \"\"\r\n        input.classList.remove(\"_error\")\r\n    }\r\n\r\n    emailValidate = (input) => {\r\n        return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(input.value)\r\n    }\r\n\r\n    clearForm = (formReqField) => {\r\n        formReqField.forEach(item => item.value = \"\")\r\n    }\r\n\r\n    formValidate = (form) => {\r\n        let error = 0;\r\n        let formReqField = form.querySelectorAll(\"[data-req]\");\r\n\r\n        const formData = {\r\n            name: formReqField[0]?.value,\r\n            email: formReqField[1]?.value,\r\n            message: formReqField[2].value\r\n        };\r\n\r\n        formReqField.forEach((item) => {\r\n            if (!item.value.length) {\r\n                this.formAddError(item, `${item.name} is require!`)\r\n                error = 1\r\n            } else {\r\n                this.formRemoveError(item)\r\n            }\r\n\r\n            if (item.name === \"email\" && item.value) {\r\n                if (!this.emailValidate(item)) {\r\n                    this.formAddError(item, \"Not valid email\")\r\n                    error = 1\r\n                } else {\r\n                    this.formRemoveError(item)\r\n                }\r\n            }\r\n            if (item.name === \"message\" && item.value.length > 256) {\r\n                if (!item.value.length < 256) {\r\n                    this.formAddError(item, \"Message must be short of 256 symbols\")\r\n                    error = 1\r\n                } else {\r\n                    this.formRemoveError(item)\r\n                }\r\n            }\r\n        })\r\n        if (error <= 0) {\r\n            this.postFormData.POST(formData)\r\n            this.modalWindowController.modalClose(this.modalWindow)\r\n            this.clearForm(formReqField)\r\n            this.modalWindowController.allClose()\r\n            this.popupWindowController.popupOpen(this.popUpWindow)\r\n            this.popupWindowController.popupWindowCloseTimeout(this.popUpWindow)\r\n        }\r\n    }\r\n\r\n}","export class PostFormData {\r\n\r\n    constructor(form, fetchAPI) {\r\n        this.dataFields = form.querySelectorAll(\"[data-req]\");\r\n        this.fetchAPI = fetchAPI;\r\n    };\r\n\r\n    POST = async (formData) => {\r\n        try {\r\n            this.dataFields.forEach(item => item.setAttribute(\"disable\", \"true\"))\r\n            const response = await this.fetchAPI.postData(\"http://localhost:8080\", formData)\r\n        } catch (error) {\r\n            console.error(error)\r\n        } finally {\r\n            this.dataFields.forEach(item => item.removeAttribute(\"disable\"))\r\n        }\r\n    };\r\n}","export class PopupWindowController {\r\n\r\n    popupOpen = (popUpWindow) => {\r\n        popUpWindow.classList.add(\"popUp-open\");\r\n    }\r\n\r\n    popupWindowCloseTimeout = (popUpWindow) => {\r\n        setTimeout(() => {\r\n            popUpWindow.classList.remove(\"popUp-open\");\r\n        }, 3000)\r\n    }\r\n}","export class ModalWindowController {\r\n\r\n    constructor(body, overlayWindow, modalWindow) {\r\n        this.body = body;\r\n        this.overlayWindow = overlayWindow;\r\n        this.modalWindow = modalWindow\r\n    }\r\n\r\n    modalOpen = () => {\r\n        this.body.classList.add(\"body_scroll-off\");\r\n        this.overlayWindow.classList.add(\"overlay-open\");\r\n        this.modalWindow.classList.add(\"lets_talk_modal-open\");\r\n        this.overlayWindow.addEventListener(\"click\", this.allClose);\r\n        this.modalWindow.addEventListener(\"click\", (e) => e.stopPropagation());\r\n    }\r\n\r\n    allClose = () => {\r\n        this.body.classList.remove(\"body_scroll-off\");\r\n        this.overlayWindow.classList.remove(\"overlay-open\");\r\n        this.overlayWindow.removeEventListener(\"click\", this.allClose);\r\n        this.modalWindow.classList.remove(\"lets_talk_modal-open\");\r\n        this.modalWindow.removeEventListener(\"click\", (e) => e.stopPropagation());\r\n    }\r\n\r\n    modalClose = (modalWindowNode) => {\r\n        modalWindowNode.classList.remove(\"lets_talk_modal-open\");\r\n    }\r\n\r\n}","import {fetch_api} from \"../api/fetch_api\";\r\nimport {FormValidate} from \"./formValidate\";\r\nimport {PostFormData} from \"./post_form_data_class\";\r\nimport {PopupWindowController} from \"./popupWindowController\";\r\nimport {ModalWindowController} from \"./modalWindowController\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n    const form = document.querySelector(\".form\");\r\n    const body = document.querySelector(\"body\");\r\n    const popUpWindow = document.querySelector(\".popUp\");\r\n    const overlayWindow = document.querySelector(\".overlay\");\r\n    const modalWindow = document.querySelector(\".lets_talk_modal\");\r\n    const letsTalkButton = document.querySelector(\".lets_talk_block__button\");\r\n    const modalWindowCloseButton = document.querySelector(\".lets_talk_modal__close_button\");\r\n\r\n    const postFormData = new PostFormData(form, fetch_api);\r\n    const popupWindowController = new PopupWindowController();\r\n    const modalWindowController = new ModalWindowController(body, overlayWindow, modalWindow);\r\n    const formExternalValidate = new FormValidate(form,popUpWindow,modalWindow,modalWindowController,popupWindowController,postFormData);\r\n\r\n    letsTalkButton.addEventListener(\"click\", modalWindowController.modalOpen);\r\n\r\n    modalWindowCloseButton.addEventListener(\"click\", modalWindowController.allClose);\r\n\r\n    form.addEventListener(\"submit\", async (event) => {\r\n            event.preventDefault();\r\n            formExternalValidate.formValidate(form);\r\n        }\r\n    );\r\n\r\n});\r\n"],"names":["fetch_api","postData","url","data","fetch","method","body","JSON","stringify","then","FormValidate","form","popUpWindow","modalWindow","modalWindowController","popupWindowController","postFormData","input","message","p","previousSibling","innerText","classList","add","remove","test","value","formReqField","forEach","item","error","querySelectorAll","formData","name","email","length","formRemoveError","formAddError","emailValidate","POST","modalClose","clearForm","allClose","popupOpen","popupWindowCloseTimeout","this","PostFormData","fetchAPI","dataFields","setAttribute","console","removeAttribute","PopupWindowController","setTimeout","ModalWindowController","overlayWindow","addEventListener","e","stopPropagation","removeEventListener","modalWindowNode","i","document","querySelector","letsTalkButton","modalWindowCloseButton","formExternalValidate","modalOpen","event","preventDefault","formValidate"],"sourceRoot":""}